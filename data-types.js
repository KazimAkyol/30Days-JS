console.log(typeof 91); // typeof number
console.log(typeof false); // typeof boolean
console.log(typeof "245"); // typeof string
console.log(typeof undefined); // typeof undefined
console.log(typeof null); // typeof object

//! Primitive Data Types

//* Primitive data types in JavaScript include:

//? Numbers - Integers, floats
//? Strings - Any data under single quote, double quote or backtick quote
//? Booleans - true or false value
//? Null - empty value or no value
//? Undefined - a declared variable without a value
//? Symbol - A unique value that can be generated by Symbol constructor

let word = "Javascript";
console.log(word); // Javascript

console.log(word[0]); // J

let numOne = 3;
let numTwo = 3;

console.log(numOne == numTwo); // true

let js = "Javascript";
let py = "Python";

console.log(js == py); // false

let lightOn = true;
let lightOff = false;

console.log(lightOn == lightOff); // false

//! Non-Primitive Data Types

//* Non-primitive data types in JavaScript includes:

//? Objects
//? Arrays

let nums = [1, "prototurk", 3]; //! Array

console.log(nums); // [1, 'prototurk', 3]

nums[1] = 2;

console.log(nums); // [1, 2, 3]

let nums1 = [1, 2, 3];
let nums2 = [1, 2, 3];

console.log(nums1 == nums2); // false

let userOne = {
  name: "Asabeneh",
  role: "teaching",
  country: "Finland",
};

let userTwo = {
  name: "Asabeneh",
  role: "teaching",
  country: "Finland",
};

console.log(userOne == userTwo); // false

let user1 = {
  name: "Tayfun",
  surname: "Erbilen",
};

let user2 = {
  name: "Tayfun",
  surname: "Erbilen",
};

console.log(user1 == user2); // false

let nums0 = [1, 2, 3];
let numbers = nums0;

console.log(nums0 == numbers); // true

let userOne1 = {
  name: "Asabeneh",
  role: "teaching",
  country: "Finland",
};

let userTwo2 = userOne1;

console.log(userOne1 == userTwo2); // true

//! Numbers

//* Declaring Number Data Types

let age = 35;
const gravity = 9.81; // we use const for non-changing values, gravitational constant in m/s2
let mass = 72; // mass in Kilogram
// const PI = 3.14; // pi a geometrical constant
const boilingPoint = 100; // temperature in oC, boiling point of water which is a constant
const bodyTemp = 37; // oC average human body temperature, which is a constant

console.log(age, gravity, mass, boilingPoint, bodyTemp);

//* Math Object

const PI = Math.PI;

console.log(PI); // 3.141592653589793

console.log(Math.round(5.5)); // 6
console.log(Math.ceil(5.49)); // 6
console.log(Math.floor(5.49)); // 5
console.log(Math.min(3, 5, 1, -5, -37)); // -37
console.log(Math.max(3, 5, 1, -5, -37)); // 5
console.log(Math.random()); // rastgele sayi veriyor

// let us create random number between 0 to 10

const num = Math.floor(Math.random() * 11); // creates random number between 0 nd 10
console.log(num);

// Absolut value
console.log(Math.abs(-10)); // 10

// Square root
console.log(Math.sqrt(441)); // 21
console.log(Math.sqrt(169)); // 13

//Power
console.log(Math.pow(5, 4)); // 625

let randomNum = Math.random(); // generates 0 to 0.99
let numBtnZeroAndTen = randomNum * 11;

console.log(numBtnZeroAndTen); // this gives: min 0 and max 10.99

let randomNumRoundToFloor = Math.floor(numBtnZeroAndTen);
console.log(randomNumRoundToFloor); // this gives between 0 and 10

//! Strings
//* Strings tek tirnak, cift tirnak, backtick arasinda olur.

let space = "";
let firstName = "M.Kerem";
let lastName = "Aktürkoglu";
let country = "Türkiye";
let city = "Istanbul";
let language = "Javascript";
let job = "football-player";
let quote = "Thats the football, its the football";

console.log(space, firstName, lastName, country, city, language, job, quote);

//* String Concatenation
//* Birden fazla string'leri birlestirmeye yarar.

let name = "Hakan";
let surname = "Sükür";

let fullName = name + " " + surname;
console.log(fullName); // Hakan Sükür

//* String'lerde Kacis (Escape) Dizeleri

// \n: new line
// \t: Tab, means 8 spaces
// \\: Back slash
// \': Single quote(')
// \'': Double quote('')

let paragragh = "benim\nadim\nkazim\nakyol";
console.log(paragragh);

//* Template Strings (``) (Backtick)

//Syntax
// `String literal text`
// `String literal text ${expression}`

let fullName1 = `${name} ${surname}`;
console.log(fullName1); // Hakan Sükür

let a = 2;
let b = 3;
console.log(`${a} is greater than ${b}: ${a > b}`); // 2 is greater than 3 : false

//! String Methods

//* Everything in JavaScript is an object.

//? 1.lenght: uzunluk

let youtube = "prototurk";
console.log(youtube.length); // 9 karakter

//? 2.Bir dize içindeki karakterlere erişme: Bir dizedeki her karaktere indeksini kullanarak erişebiliriz. Programlamada sayma 0'dan başlar. Dizenin ilk indeksi sıfırdır ve son indeks dizenin uzunluğu eksi birdir.

let lastIndex = youtube.length - 1;
console.log(youtube[lastIndex]); // k

//? 3.toUpperCase(): this method changes the string to uppercase letters. (büyük harfe cevirir)

let dizi = "prototurk";
console.log(dizi.toUpperCase()); // PROTOTURK

let string = "JavaScript";
console.log(string.toUpperCase()); // JAVASCRIPT

let country0 = "Deutschland";
console.log(country0.toUpperCase()); // DEUTSCHLAND

//? 4.toLowerCase(): this method changes the string to lowercase letters. (kücük harfe cevirir)

let dizi0 = "AKADEMI";
console.log(dizi0.toLowerCase()); // akademi

let string0 = "JAVASCRIPT";
console.log(string0.toLowerCase()); // javascript

let country1 = "UNITED STATES OF AMERICA";
console.log(country1.toLowerCase()); // united states of america

//? 5.substr(): Başlangıç dizini ve dilimlenecek karakter sayısı olmak üzere iki bağımsız değişken alır.

let neu = "TypeScript";
console.log(neu.substr(4, 6)); // Script

let team = "ManchesterCity";
console.log(team.substr(10, 4)); // City

//? 6.substring(): Başlangıç indeksi ve durma indeksi olmak üzere iki argüman alır, ancak durma indeksindeki karakteri içermez.

let string1 = "JavaScript";
console.log(string1.substring(0, 4)); // Java
console.log(string1.substring(4, 10)); // Script

//? 7.split(): Split yöntemi, bir dizeyi belirtilen bir yerden böler.

let string2 = "30 Days Of JavaScript";
console.log(string2.split()); // ['30 Days Of Javascript']
console.log(string2.split(" ")); // ['30', 'Days', 'Of', 'Javascript']

//? 8.trim(): Bir dizenin başındaki veya sonundaki boşluğu kaldırır.

let string3 = " 30 Days Of JavaScript ";
console.log(string3.trim(" "));

//? 9.includes(): Bir alt dize bağımsız değişkeni alır ve alt dize bağımsız değişkeninin dizede var olup olmadığını kontrol eder. includes() bir Boolean döndürür. Bir dizede bir alt dize varsa true, aksi takdirde false döndürür.

let string4 = "30 Days Of JavaScript";
console.log(string4.includes("Days")); // true
console.log(string4.includes("days")); // false
console.log(string4.includes("Script")); // true
console.log(string4.includes("script")); // false
console.log(string4.includes("java")); // false
console.log(string4.includes("Java")); // true

//? 10.replace(): Parametre olarak eski alt dizeyi ve yeni bir alt dizeyi alır.

let string5 = "30 Days Of JavaScript";
console.log(string5.replace("JavaScript", "Pyhton")); // 30 Days Of Pyhton

//? 11.charAt(): İndeks alır ve o indeksteki değeri döndürür.

// string.charAt(index);

let string6 = "30 Days Of JavaScript";
console.log(string6.charAt(0)); // 3

//? 12.charCodeAt(): İndeks alır ve o indeksteki değerin karakter kodunu (ASCII numarası) döndürür.

let string7 = "30 Days Of JavaScript";
console.log(string7.charCodeAt(3)); // D ASCII number is 68

//? 13.indexOf():Bir alt dize alır ve alt dize bir dizede mevcutsa alt dizenin ilk konumunu döndürür, mevcut değilse -1 döndürür.

let string8 = "30 Days Of JavaScript";
console.log(string8.indexOf("D")); // 3
console.log(string8.indexOf("Days")); // 3
console.log(string8.indexOf("days")); // -1,mevcut degil
console.log(string8.indexOf("a")); // 4
console.log(string8.indexOf("JavaScript")); // 11
console.log(string8.indexOf("Script")); // 15
console.log(string8.indexOf("script")); // -1,mevcut degil

//? 14.lastIndexOf(): Bir alt dize alır ve alt dize bir dizede mevcutsa alt dizenin son konumunu döndürür, mevcut değilse -1 döndürür.

//syntax => string.lastIndexOf(substring);

let string9 =
  "I love JavaScript. If you do not love JavaScript what else can you love.";

console.log(string9.lastIndexOf("love")); //67
console.log(string9.lastIndexOf("you")); // 63
console.log(string9.lastIndexOf("JavaScript")); // 38

//? 15.concat(): Birçok alt dizeyi alır ve bunları birleştirir.

// string.concat(substring, substring, substring);

let string10 = "30";
console.log(string10.concat("Days", "Of", "JavaScript")); // 30DaysOfJavaScript

let country2 = "Eng";
console.log(country2.concat("land")); // England

//? 16.startsWith(): Argüman olarak bir alt dize alır ve dizenin belirtilen alt dize ile başlayıp başlamadığını kontrol eder. Bir Boolean (doğru veya yanlış) döndürür.

//syntax => string.startsWith(substring)

let string11 = "Love is the best to in this world";

console.log(string11.startsWith("Love")); // true
console.log(string11.startsWith("love")); // false
console.log(string11.startsWith("world")); // false

let country3 = "Finland";

console.log(country3.startsWith("Fin")); // true
console.log(country3.startsWith("fin")); // false
console.log(country3.startsWith("land")); //  false

//? 17.endsWith(): Argüman olarak bir alt dize alır ve dizenin belirtilen alt dize ile bitip bitmediğini kontrol eder. Bir Boolean (doğru veya yanlış) döndürür.

// string.endsWith(substring)

let string12 = "Love is the most powerful feeling in the world";

console.log(string12.endsWith("world")); // true
console.log(string12.endsWith("love")); // false
console.log(string12.endsWith("in the world")); // true

let country4 = "Finland";

console.log(country4.endsWith("land")); // true
console.log(country4.endsWith("fin")); // false
console.log(country4.endsWith("Fin")); //  false

//? 18.search(): Bağımsız değişken olarak bir alt dize alır ve ilk eşleşmenin dizinini döndürür. Arama değeri bir dize veya düzenli ifade deseni(Regex) olabilir.

// string.search(substring)

let string13 =
  "I love JavaScript. If you do not love JavaScript what else can you love";

console.log(string13.search("love")); // 2
console.log(string13.search(/javascript/gi)); // 7, Regex konusuna deginilecek

//? 19.match(): Argüman olarak bir alt dize veya düzenli ifade kalıbı alır ve eşleşme varsa bir dizi döndürür, yoksa null döndürür. Bir düzenli ifade kalıbının nasıl göründüğünü görelim. işareti ile başlar ve / işareti ile biter.

// syntax => string.match(substring)

let string14 =
  "I love JavaScript. If you do not love JavaScript what else can you love.";

console.log(string14.match("love")); // ["love", index: 2, input: "I love JavaScript. If you do not love JavaScript what else can you love.", groups: undefined]

let pattern = /love/gi;
console.log(string14.match(pattern)); // ['love', 'love', 'love']

let txt =
  "In 2019, I ran 30 Days of Pyhton. Now, in 2020 I am super exited to start this challenge.";
let regEx = /\d+/;

// kaçış karakterli d, d'nin normal bir d olmadığı, bunun yerine bir rakam olduğu anlamına gelir,
// + bir veya daha fazla basamaklı sayı anlamına gelir,
// ondan sonra g varsa küresel anlamına gelir, her yerde arayın.

console.log(txt.match(regEx)); // ["2", "0", "1", "9", "3", "0", "2", "0", "2", "0"]
console.log(txt.match(/\d+/)); // ["2019", "30", "2020"]

//? 20.repeat(): Argüman olarak bir sayı alır ve dizenin tekrarlanan versiyonunu döndürür.

// string.repeat(n);

let string15 = "love";
console.log(string15.repeat(10)); // lovelovelovelovelovelovelovelovelovelove

//! Changing Data Type(Casting)

//* Casting: Bir veri tipini başka bir veri tipine dönüştürme.   ParseInt(),                                                   parseFloat(),                                                     Number(),                                                             + işareti,                                                           str() aritmetik işlemler yaptığımızda string sayılar önce integer veya float'a dönüştürülmelidir, dönüştürülmezse hata verir.

let num3 = "10";
let numInt = parseInt(num3);
console.log(numInt); // 10

let num4 = "71";
let numInt0 = Number(num4);
console.log(numInt0); // 71

let num5 = "34";
let numInt1 = +num5;
console.log(numInt1); // 34
